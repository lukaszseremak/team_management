[tool.poetry]
name = "teams_managment"
version = "0.1.0"
description = ""
authors = []
packages = [
    { include = "src", from="." },
]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.75.2"
psycopg2-binary = "^2.9.3"
pydantic = "^1.9.0"
requests = "^2.28.1"
uvicorn = "^0.17.6"
PyDio = "0.1.0"
SQLAlchemy = "^1.4.35"
SQLAlchemy-Utils = "^0.38.2"

black = {version = "^22.3.0", optional = true}
flake8 = {version = "^4.0.1", optional = true}
mypy = {version = "^0.961", optional = true}
pytest = {version = "^7.1.2", optional = true}
pytest-cov = {version = "^3.0.0", optional = true}
vulture = {version = "^2.4", optional = true}
wemake-python-styleguide = {version = "0.16.1", optional = true}

[tool.poetry.extras]
tests = ["pytest", "pytest-cov"]
style = ["black", "flake8", "vulture", "wemake-python-styleguide"]
typing = ["mypy"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
python_files = "test_*.py *_utils.py"
python_classes = "Test[A-Z_]*"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["teams_managment"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.",
    "raise NotImplementedError"
]
show_missing = true
skip_covered = true

[tool.coverage.paths]
source = [
    "src",
    ".tox/*/site-packages"
]

[tool.vulture]
paths = ["src"]
min_confidence = 90
sort_by_size = true

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
